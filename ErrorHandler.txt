"""
Module to handle http errors
"""
import logging
import traceback
from flask import request
from flask_api import status
import os
from Api import app
from flask import jsonify, Response

# Error Handlers
@app.errorhandler(status.HTTP_400_BAD_REQUEST)
def bad_request(error):
    """ Handles bad reuests with 400_BAD_REQUEST """
    logging.error(str(error))
    logging.error(traceback.format_exc())
    return (
        jsonify(
            status=status.HTTP_400_BAD_REQUEST, error="Bad Request", message=str(error)
        ),
        status.HTTP_400_BAD_REQUEST,
    )


@app.errorhandler(status.HTTP_404_NOT_FOUND)
def not_found(error):
    """ Handles resources not found with 404_NOT_FOUND """
    logging.error(str(error))
    logging.error(traceback.format_exc())
    return (
        jsonify(
            status=status.HTTP_404_NOT_FOUND, error="Not Found", message=str(error)
        ),
        status.HTTP_404_NOT_FOUND,
    )


@app.errorhandler(status.HTTP_500_INTERNAL_SERVER_ERROR)
def internal_server_error(error):
    """ Handles unexpected server error with 500_SERVER_ERROR """
    logging.error(str(error))
    logging.error(traceback.format_exc())
    return (
        jsonify(
            status=status.HTTP_500_INTERNAL_SERVER_ERROR,
            error="Internal Server Error",
            message=str(error),
        ),
        status.HTTP_500_INTERNAL_SERVER_ERROR,
    )


@app.errorhandler(Exception)
def unhandled_error(error):
    """ Unhandled errors will be passed to this """
    logging.error(str(error))
    logging.error(traceback.format_exc())
    return (
        jsonify(
            status='Error',
            error='There seems to be some error. Kindly check your input or contact the development team'
        ),
        status.HTTP_501_NOT_IMPLEMENTED,
    )
